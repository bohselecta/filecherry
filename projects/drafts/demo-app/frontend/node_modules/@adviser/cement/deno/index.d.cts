import { E as ExitService, a as ExitHandler, W as WrapperSysAbstractionParams } from '../base-sys-abstraction-DAZ8tx5F.cjs';
import { b as SystemService, E as Env, V as VoidFunc, S as SysAbstraction, F as FileService, N as NamedWritableStream } from '../sys-abstraction-BTs3Vzy4.cjs';
import { T as TxtEnDecoder } from '../get-params-result-4xHM5s4_.cjs';

declare class DenoExitServiceImpl implements ExitService {
    constructor();
    _exitHandlers: ExitHandler[];
    injectExitHandlers(hdls: ExitHandler[]): void;
    invoked: boolean;
    readonly _handleExit: () => Promise<void>;
    exit(code: number): void;
}
declare class DenoSystemService implements SystemService {
    static readonly _exitHandlers: ExitHandler[];
    readonly _exitService: ExitService;
    constructor();
    Env(): Env;
    Args(): string[];
    OnExit(hdl: VoidFunc): VoidFunc;
    Exit(code: number): void;
}
declare function DenoSysAbstraction(param?: WrapperSysAbstractionParams): SysAbstraction;

declare class DenoFileService implements FileService {
    readonly baseDir: string;
    readonly txtEnde: TxtEnDecoder;
    constructor(baseDir?: string, txtEnde?: TxtEnDecoder);
    readFileString(fname: string): Promise<string>;
    dirname(fname: string): string;
    basename(fname: string): string;
    join(...paths: string[]): string;
    relative(from: string, to?: string): string;
    abs(fname: string): string;
    isAbsolute(fname: string): boolean;
    writeFileString(fname: string, content: string, ende?: TxtEnDecoder): Promise<void>;
    create(fname: string): Promise<NamedWritableStream>;
}

export { DenoExitServiceImpl, DenoFileService, DenoSysAbstraction, DenoSystemService };
