import { W as WrapperSysAbstractionParams } from '../base-sys-abstraction-DAZ8tx5F.cjs';
import { b as SystemService, E as Env, V as VoidFunc, S as SysAbstraction, c as EnvActions, d as EnvImpl, e as EnvFactoryOpts } from '../sys-abstraction-BTs3Vzy4.cjs';
import '../get-params-result-4xHM5s4_.cjs';

declare class CFSystemService implements SystemService {
    Env(): Env;
    Args(): string[];
    OnExit(hdl: VoidFunc): VoidFunc;
    Exit(code: number): void;
}
declare function CFSysAbstraction(param?: WrapperSysAbstractionParams): SysAbstraction;

declare class CFEnvActions implements EnvActions {
    readonly injectOnRegister: Record<string, string>;
    readonly cfEnv: Map<string, string>;
    env?: EnvImpl;
    static new(opts: Partial<EnvFactoryOpts>): EnvActions;
    static inject(o: Record<string, string>): void;
    private constructor();
    active(): boolean;
    register(env: Env): Env;
    get(key: string): string | undefined;
    set(key: string, value?: string): void;
    delete(key: string): void;
    keys(): string[];
}

export { CFEnvActions, CFSysAbstraction, CFSystemService };
