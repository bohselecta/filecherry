import { Env, EnvActions, EnvFactoryOpts } from "../sys-env.js";
interface DenoEnv {
    get: (key: string) => string | undefined;
    toObject: () => Record<string, string>;
    set: (key: string, value: string) => void;
    has: (key: string) => boolean;
    delete: (key: string) => void;
}
export declare class DenoEnvActions implements EnvActions {
    #private;
    static new(opts: Partial<EnvFactoryOpts>): EnvActions;
    get _env(): DenoEnv;
    readonly opts: Partial<EnvFactoryOpts>;
    private constructor();
    register(env: Env): Env;
    active(): boolean;
    keys(): string[];
    get(key: string): string | undefined;
    set(key: string, value?: string): void;
    delete(key: string): void;
}
export {};
//# sourceMappingURL=deno-env-actions.d.ts.map