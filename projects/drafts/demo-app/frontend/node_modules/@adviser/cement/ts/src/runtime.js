function isSet(value, ref = globalThis) {
    const [head, ...tail] = value.split(".");
    if (["object", "function"].includes(typeof ref) && ref && ["object", "function"].includes(typeof ref[head]) && ref[head]) {
        if (tail.length <= 1) {
            return true;
        }
        return isSet(tail.join("."), ref[head]);
    }
    return false;
}
export function runtimeFn() {
    const gt = globalThis;
    let isReactNative = isSet("navigator.product") && typeof gt["navigator"] === "object" && gt["navigator"]["product"] === "ReactNative";
    let isNodeIsh = false;
    if (!isSet("Deno")) {
        isNodeIsh = isSet("process.versions.node") && !isReactNative;
    }
    let isDeno = isSet("Deno");
    const isCFWorker = isSet("caches.default") && isSet("WebSocketPair");
    if (isCFWorker) {
        isDeno = false;
        isNodeIsh = false;
        isReactNative = false;
    }
    return {
        isNodeIsh,
        isBrowser: !(isNodeIsh || isDeno || isCFWorker || isReactNative),
        isDeno,
        isReactNative,
        isCFWorker,
    };
}
//# sourceMappingURL=runtime.js.map