import { runtimeFn } from "../runtime.js";
const gts = globalThis;
async function main() {
    var _a, _b;
    const modPath = runtimeFn().isDeno
        ? new URL("../deno/deno-sys-abstraction.ts", import.meta.url).pathname
        : new URL("../node/node-sys-abstraction.ts", import.meta.url).pathname;
    const sa = (await import(modPath));
    const my = runtimeFn().isDeno ? sa.DenoSysAbstraction() : sa.NodeSysAbstraction();
    const process = runtimeFn().isDeno ? gts.Deno : gts.process;
    const rargs = (runtimeFn().isDeno ? (_a = gts.Deno) === null || _a === void 0 ? void 0 : _a.args : (_b = gts.process) === null || _b === void 0 ? void 0 : _b.argv) || [];
    const larg = rargs[rargs.length - 1];
    console.log(JSON.stringify({
        larg,
        pid: process.pid,
    }));
    my.System().OnExit(async () => {
        await my.Time().Sleep(100);
        console.log(JSON.stringify({
            larg,
            pid: process.pid,
            msg: "Called OnExit 1",
        }));
    });
    my.System().OnExit(async () => {
        await my.Time().Sleep(200);
        console.log(JSON.stringify({
            larg,
            pid: process.pid,
            msg: "Called OnExit 2",
        }));
    });
    switch (larg) {
        case "sigint":
            await my.Time().Sleep(100);
            process.kill(process.pid, "SIGINT");
            await my.Time().Sleep(1000000);
            break;
        case "sigquit":
            await my.Time().Sleep(100);
            process.kill(process.pid, "SIGQUIT");
            await my.Time().Sleep(1000000);
            break;
        case "sigterm":
            await my.Time().Sleep(100);
            process.kill(process.pid, "SIGTERM");
            await my.Time().Sleep(1000000);
            break;
        case "throw":
            await my.Time().Sleep(100);
            throw new Error("throwing");
        case "sleep":
            await my.Time().Sleep(3000);
            break;
        case "exit24":
        default:
            my.System().Exit(24);
    }
    return;
}
main();
//# sourceMappingURL=test-exit-handler.js.map