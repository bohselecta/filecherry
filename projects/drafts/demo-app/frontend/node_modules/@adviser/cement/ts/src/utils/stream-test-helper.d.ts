import type { Mock } from "vitest";
interface mockValue {
    done: boolean;
    value: Uint8Array | undefined;
    fillCalls: number;
    reBufferCalls: number;
}
export interface streamingTestState {
    readonly sendChunks: number;
    readonly sendChunkSize: number;
    fillCalls: number;
    CollectorFn: Mock<(mv: mockValue) => void>;
}
export declare function receiveFromStream(reb: ReadableStream<Uint8Array>, state: streamingTestState): Promise<void>;
export declare function sendToStream(reb: WritableStream<Uint8Array>, state: streamingTestState): Promise<void>;
export {};
//# sourceMappingURL=stream-test-helper.d.ts.map