import { LevelHandler, Level } from "./logger.js";
import { Option } from "./option.js";
export declare class LevelHandlerImpl implements LevelHandler {
    readonly _globalLevels: Set<Level>;
    readonly _modules: Map<string, Set<Level>>;
    ignoreAttr: Option<RegExp>;
    isStackExposed: boolean;
    enableLevel(level: Level, ...modules: string[]): void;
    disableLevel(level: Level, ...modules: string[]): void;
    setExposeStack(enable?: boolean): void;
    setIgnoreAttr(re?: RegExp): void;
    forModules(level: Level, fnAction: (p: string) => void, ...modules: (string | string[])[]): void;
    setDebug(...modules: (string | string[])[]): void;
    isEnabled(ilevel: unknown, module: unknown): boolean;
}
export declare function LevelHandlerSingleton(): LevelHandler;
//# sourceMappingURL=log-level-impl.d.ts.map