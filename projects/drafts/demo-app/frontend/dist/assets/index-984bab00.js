import{K as t,g as e,e as r,a as n,R as s,b as a,c as o,r as i,d as c,N as u}from"./index-00227bd7.js";const d=(t,e)=>e.some(e=>t instanceof e);let g,l;const h=new WeakMap,b=new WeakMap,w=new WeakMap;let p={get(t,e,r){if(t instanceof IDBTransaction){if("done"===e)return h.get(t);if("store"===e)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return v(t[e])},set:(t,e,r)=>(t[e]=r,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function y(t){p=t(p)}function f(t){return(l||(l=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(I(this),e),v(this.request)}:function(...e){return v(t.apply(I(this),e))}}function m(t){return"function"==typeof t?f(t):(t instanceof IDBTransaction&&function(t){if(h.has(t))return;const e=new Promise((e,r)=>{const n=()=>{t.removeEventListener("complete",s),t.removeEventListener("error",a),t.removeEventListener("abort",a)},s=()=>{e(),n()},a=()=>{r(t.error||new DOMException("AbortError","AbortError")),n()};t.addEventListener("complete",s),t.addEventListener("error",a),t.addEventListener("abort",a)});h.set(t,e)}(t),d(t,g||(g=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(t,p):t)}function v(t){if(t instanceof IDBRequest)return function(t){const e=new Promise((e,r)=>{const n=()=>{t.removeEventListener("success",s),t.removeEventListener("error",a)},s=()=>{e(v(t.result)),n()},a=()=>{r(t.error),n()};t.addEventListener("success",s),t.addEventListener("error",a)});return w.set(e,t),e}(t);if(b.has(t))return b.get(t);const e=m(t);return e!==t&&(b.set(t,e),w.set(e,t)),e}const I=t=>w.get(t);function D(t,e,{blocked:r,upgrade:n,blocking:s,terminated:a}={}){const o=indexedDB.open(t,e),i=v(o);return n&&o.addEventListener("upgradeneeded",t=>{n(v(o.result),t.oldVersion,t.newVersion,v(o.transaction),t)}),r&&o.addEventListener("blocked",t=>r(t.oldVersion,t.newVersion,t)),i.then(t=>{a&&t.addEventListener("close",()=>a()),s&&t.addEventListener("versionchange",t=>s(t.oldVersion,t.newVersion,t))}).catch(()=>{}),i}const S=["get","getKey","getAll","getAllKeys","count"],B=["put","add","delete","clear"],E=new Map;function j(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(E.get(e))return E.get(e);const r=e.replace(/FromIndex$/,""),n=e!==r,s=B.includes(r);if(!(r in(n?IDBIndex:IDBObjectStore).prototype)||!s&&!S.includes(r))return;const a=async function(t,...e){const a=this.transaction(t,s?"readwrite":"readonly");let o=a.store;return n&&(o=o.index(e.shift())),(await Promise.all([o[r](...e),s&&a.done]))[0]};return E.set(e,a),a}y(t=>({...t,get:(e,r,n)=>j(e,r)||t.get(e,r,n),has:(e,r)=>!!j(e,r)||t.has(e,r)}));const x=["continue","continuePrimaryKey","advance"],k={},M=new WeakMap,P=new WeakMap,L={get(t,e){if(!x.includes(e))return t[e];let r=k[e];return r||(r=k[e]=function(...t){M.set(this,P.get(this)[e](...t))}),r}};async function*O(...t){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...t)),!e)return;const r=new Proxy(e,L);for(P.set(r,e),w.set(r,I(e));e;)yield r,e=await(M.get(r)||e.continue()),M.delete(r)}function U(t,e){return e===Symbol.asyncIterator&&d(t,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===e&&d(t,[IDBIndex,IDBObjectStore])}y(t=>({...t,get:(e,r,n)=>U(e,r)?O:t.get(e,r,n),has:(e,r)=>U(e,r)||t.has(e,r)}));function C(t){return t.build().defParam("version","v0.19-indexdb").URI()}function K(t){return 1===t.length&&(t=t[0]),t}var A=new t;async function N(t,e){const r=V(t,e),n=await A.get(r.fullDb).once(async()=>{const n=await D(r.fullDb,1,{upgrade(t){["version","data","wal","meta","idx.data","idx.wal","idx.meta"].map(e=>{t.createObjectStore(e,{autoIncrement:!1})})}}),s=await n.get("version","version"),a=C(t).getParam("version");return s?s.version!==a&&e.logger.Warn().Str("url",t.toString()).Str("version",a).Str("found",s.version).Msg("version mismatch"):await n.put("version",{version:a},"version"),{db:n,dbName:r,version:a,url:t}});return{...n,url:t.build().setParam("version",n.version).URI()}}function T(...t){return t.map(t=>t.replace(/^[^a-zA-Z0-9]+/g,"").replace(/[^a-zA-Z0-9-]+/g,"_")).filter(t=>t.length).join(".")}function V(t,r){const n=C(t),s=n.pathname.replace(/^\/+/,"").replace(/\?.*$/,""),a=n.getParam("name");if(!a)throw r.logger.Error().Str("url",n.toString()).Msg("name not found").AsError();const o=T(s,a),i=e(n,r,T).name,c=[o,i].join(":");return{fullDb:o,objStore:i,connectionKey:c,dbName:a}}var W=class{constructor(t){this.logger=r(t,"IndexDBGateway"),this.sthis=t}async start(t){return n(async()=>{this.logger.Debug().Url(t).Msg("starting"),await this.sthis.start();const e=await N(t,this.sthis);return this.logger.Debug().Url(e.url).Msg("started"),e.url})}async close(){return s.Ok(void 0)}async destroy(t){return n(async()=>{const r=e(t,this.sthis,T).name,n=(await N(t,this.sthis)).db.transaction(r,"readwrite"),s=n.objectStore(r),a=[];for(let t=await s.openCursor();t;t=await t.continue())a.push(t.primaryKey);for(const t of a)await n.db.delete(r,t);await n.done})}buildUrl(t,e){return Promise.resolve(s.Ok(t.build().setParam("key",e).URI()))}async get(t){return a(async()=>{const r=c(t,this.logger),n=e(t,this.sthis,T).name;this.logger.Debug().Url(t).Str("key",r).Str("store",n).Msg("getting");const{db:a}=await N(t,this.sthis),o=a.transaction([n],"readonly"),i=await o.objectStore(n).get(K(r));return await o.done,i?s.Ok(i):s.Err(new u(`missing ${r}`))})}async put(t,r){return n(async()=>{const n=c(t,this.logger),s=e(t,this.sthis,T).name;this.logger.Debug().Url(t).Str("key",n).Str("store",s).Msg("putting");const{db:a}=await N(t,this.sthis),o=a.transaction([s],"readwrite");await o.objectStore(s).put(r,K(n)),await o.done})}async delete(t){return n(async()=>{const r=c(t,this.logger),n=e(t,this.sthis,T).name;this.logger.Debug().Url(t).Str("key",r).Str("store",n).Msg("deleting");const{db:a}=await N(t,this.sthis),o=a.transaction([n],"readwrite");return await o.objectStore(n).delete(K(r)),await o.done,s.Ok(void 0)})}},_=class{constructor(t){this.sthis=t,this.logger=r(t,"IndexDBTestStore",{})}async get(t,r){const n=await N(t,this.sthis),s=e(n.url,this.sthis,T).name;this.logger.Debug().Str("key",r).Str("store",s).Msg("getting");let a=await n.db.get(s,K(r));return this.logger.Debug().Str("key",r).Str("store",s).Int("len",a.length).Msg("got"),"string"==typeof a&&(a=this.sthis.txt.encode(a)),a}},R=class{constructor(t,e){this._db=new o,this.sthis=e,this.logger=e.logger,this.url=t,this.dbName=i.getPath(this.url,this.sthis)}async _prepare(){return this._db.once(async()=>await D(this.dbName,1,{upgrade(t){["bag"].map(e=>{t.createObjectStore(e,{autoIncrement:!1})})}}))}async get(t){const e=(await this._prepare()).transaction(["bag"],"readonly"),r=await e.objectStore("bag").get(t);if(await e.done,r)return r}async set(t,e){const r=(await this._prepare()).transaction(["bag"],"readwrite");await r.objectStore("bag").put(e,t),await r.done}};export{W as GatewayImpl,_ as GatewayTestImpl,W as IndexDBGateway,_ as IndexDBTestGateway,R as KeyBagProviderImpl,R as KeyBagProviderIndexDB,V as getIndexDBName};
